name: .NET

on:
  pull_request:
    branches: [ master ] 

jobs:
  build:

    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    env:
      RPROVIDER_LOG: rlog.txt

    steps:
    - uses: actions/checkout@master
    - uses: r-lib/actions/setup-r@v1
      name: Setup R - Windows / macOS
      if: matrix.os != 'ubuntu-latest'
      with:
          r-version: '4.0.2'
    - name: Set R_HOME environment variable
      run:   |
         if [ "$RUNNER_OS" == "Linux" ]; then
              mkdir -p ~/.local/lib/R
              echo "R_LIBS_USER=~/.local/lib/R" >> "$GITHUB_ENV"
              echo "R_HOME=$(R RHOME)" >> "$GITHUB_ENV"
         elif [ "$RUNNER_OS" == "macOS" ]; then
              echo "R_HOME=$(R RHOME)" >> "$GITHUB_ENV"
         elif [ "$RUNNER_OS" == "Windows" ]; then
              echo "R_HOME=$(R RHOME)" >> "$GITHUB_ENV"
         else
              echo "$RUNNER_OS not supported"
              exit 1
         fi
      shell: bash
    - name: Install R package dependencies
      run: Rscript -e "install.packages(c('ggplot2'), repos = 'http://cran.us.r-project.org')"
      shell: bash
    - name: Test F# scripts
      run: dotnet fsi citest.fsx
    - name: Check R log
      if: ${{ always() }}
      run: cat rlog.txt
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore tool dependencies
      run: dotnet tool restore
    - name: Restore paket dependencies
      run: dotnet paket restore
    - name: Test3 library build
      run:  |
        dotnet restore test3
        dotnet build test3
    - name: Restore dependencies
      run: dotnet restore bristlecone.sln
    - name: Build
      run: dotnet fake build -t All
    - name: Check R log
      if: ${{ always() }}
      run: cat rlog.txt