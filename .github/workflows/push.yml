name: .NET

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]

    steps:
    - uses: actions/checkout@master
    - name: Setup R - Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run:   |
          sudo apt update -qq
          sudo apt install --no-install-recommends software-properties-common dirmngr
          wget -qO- https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc | sudo tee -a /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc
          sudo add-apt-repository "deb https://cloud.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran40/"
          sudo apt install --no-install-recommends r-base
    - uses: r-lib/actions/setup-r@v1
      name: Setup R - Windows / macOS
      if: matrix.os != 'ubuntu-latest'
      with:
          r-version: '4.0.2'
    - name: Set R_HOME environment variable
      run:   |
         if [ "$RUNNER_OS" == "Linux" ]; then
              mkdir -p ~/.local/lib/R
              echo "R_LIBS_USER=~/.local/lib/R" >> "$GITHUB_ENV"
              echo "R_HOME=$(R RHOME)" >> "$GITHUB_ENV"
         elif [ "$RUNNER_OS" == "macOS" ]; then
              echo "R_HOME=$(R RHOME)" >> "$GITHUB_ENV"
         elif [ "$RUNNER_OS" == "Windows" ]; then
              echo "R_HOME=$(R RHOME)" >> "$GITHUB_ENV"
         else
              echo "$RUNNER_OS not supported"
              exit 1
         fi
      shell: bash
    - name: Verify R Home
      run: |
        Rscript -e 'R.home()'
        echo "${{ env.R_HOME }}"
    - name: Install R package dependencies
      run: Rscript -e "install.packages(c('ggplot2'))"
      shell: bash
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore tool dependencies
      run: dotnet tool restore
    - name: Restore paket dependencies
      run: dotnet paket restore
    - name: Restore dependencies
      run: dotnet restore bristlecone.sln
    - name: Build
      run: dotnet fake build -t All
    - name: Deploy documentation from master
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./output
        publish_branch: gh-pages
        force_orphan: true
    - name: Examine bin
      run: ls -r bin
    - name: Publish NuGets (if this version not published before)
      if: matrix.os == 'macos-latest'
      run: dotnet nuget push bin/*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGETKEY }} --skip-duplicate
